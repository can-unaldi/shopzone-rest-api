{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","store/components/StoreItem.js","store/components/StoreList.js","store/pages/Stores.js","shared/context/auth-context.js","store/components/ProfileItem.js","store/components/ProfileList.js","store/pages/Profile.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","products/components/ProductItem.js","products/components/ProductList.js","products/pages/Store.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","products/pages/UpdateProduct.js","store/pages/UpdateStore.js","user/pages/Login.js","user/pages/Signup.js","products/pages/NewProduct.js","store/pages/NewStore.js","products/components/FavoritesItem.js","products/components/FavoritesList.js","products/pages/Favorites.js","App.js","index.js"],"names":["logoutTimer","Backdrop","props","ReactDOM","createPortal","className","onClick","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","children","footerClass","footer","ReactDom","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Avatar","src","image","alt","width","height","Card","StoreItem","id","name","productCount","StoreList","items","length","map","store","key","title","products","Stores","data","setData","process","stores","fetchData","AuthContext","createContext","isLoggedIn","userId","token","userType","favorites","login","logout","setUserFavorites","ProfileItem","auth","useContext","showConfirmModal","setShowConfirmModal","closeDeleteModalHandler","confirmDeleteHandler","Authorization","onDelete","ProfileList","onDeleteStore","Profile","deletedDataId","prevData","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","ProductItem","favoriteStatus","setFavoriteStatus","includes","checkfavorite","addFavorite","removeFavorite","price","description","slice","ownerId","ProductList","product","storeId","owner","onDeleteProduct","Store","setFavorites","useParams","localStorage","getItem","setItem","JSON","stringify","parse","f","_id","console","log","storeTitle","storeDescription","storeOwner","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","element","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","UpdateProduct","loadedData","setLoadedData","productId","history","useHistory","inputHandler","setFormData","productUpdateSubmitHandler","UpdateStore","storeUpdateSubmitHandler","Login","email","password","loginSubmitHandler","Signup","signupSubmitHandler","NewProduct","submitHandler","NewStore","deleteHandler","FavoriteList","FavoritesItem","onDeleteFavoritesList","Favorites","getData","newData","d","App","routes","setToken","tokenExperationDate","setExpirationDate","setUserId","setUserType","removeItem","uid","uType","experationDate","Date","getTime","experation","toISOString","remainingTime","setTimeout","clearTimeout","storedData","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.a3e6c767.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExperationDate, setExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(null);\r\n  const [userType, setUserType] = useState(null);\r\n\r\n  const setUserFavorites = useCallback((favorites) => {\r\n    localStorage.removeItem(\"favorites\");\r\n    localStorage.setItem(\r\n      \"favorites\",\r\n      JSON.stringify({\r\n        favorites: favorites,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const login = useCallback((uid, token, uType, experationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    setUserType(uType);\r\n    const tokenExperationDate =\r\n      experationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setExpirationDate(tokenExperationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        userType: uType,\r\n        experation: tokenExperationDate.toISOString(),\r\n      })\r\n    );\r\n    localStorage.setItem(\r\n      \"favorites\",\r\n      JSON.stringify({favorites:[]})\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setExpirationDate(null);\r\n    setUserId(null);\r\n    setUserType(null);\r\n    localStorage.removeItem(\"userData\");\r\n    localStorage.removeItem(\"favorites\");\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExperationDate) {\r\n      const remainingTime =\r\n        tokenExperationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExperationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.experation) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        storedData.userType,\r\n        new Date(storedData.experation)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return {\r\n    token,\r\n    login,\r\n    logout,\r\n    userId,\r\n    userType,\r\n    setUserFavorites,\r\n  };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n          <div className={`modal__content ${props.contentClass}`}>\r\n              {props.children}\r\n          </div>\r\n          <footer className={`modal__footer ${props.footerClass}`}>\r\n            {props.footer}\r\n          </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDom.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel}/>}\r\n      <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\" >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n  </React.Fragment>\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (error) {\r\n        setError(error.message || \"Someting went wrong..\");\r\n        setIsLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./StoreItem.css\";\r\n\r\nconst StoreItem = (props) => {\r\n  return (\r\n    <li className=\"store-item\">\r\n      <Card className=\"store-item__content\">\r\n        <Link to={`/${props.id}/products`}>\r\n          <div className=\"store-item__image\">\r\n            <Avatar image={props.image} alt={props.name} />\r\n          </div>\r\n          <div className=\"store-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.productCount} {props.productCount === 1 ? \"Product\" : \"Products\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default StoreItem;\r\n","import React from \"react\";\r\n\r\nimport \"./StoreList.css\";\r\nimport StoreItem from \"./StoreItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nconst StoreList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No stores found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"stores-list\">\r\n      {props.items.map((store) => (\r\n        <StoreItem\r\n          key={store.id}\r\n          id={store.id}\r\n          image={store.image}\r\n          name={store.title}\r\n          productCount={store.products.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default StoreList;\r\n","import React, { useEffect, useState } from \"react\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport StoreList from \"../components/StoreList\";\nconst Stores = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/stores`);\n\n        setData(responseData.stores);\n      } catch (error) {\n      }\n    };\n    fetchData();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && data && <StoreList items={data} />}\n    </React.Fragment>\n  );\n};\n\nexport default Stores;","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    userId:null,\r\n    token:null,\r\n    userType: false,\r\n    favorites:null,\r\n    login: () => {},\r\n    logout: () => {},\r\n    setUserFavorites: () => {},\r\n});","import React, { useState, useContext } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport \"./ProfileItem.css\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst ProfileItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openDeleteModalHandler = () => setShowConfirmModal(true);\r\n  const closeDeleteModalHandler = () => setShowConfirmModal(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/stores/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={closeDeleteModalHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"product-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button onClick={closeDeleteModalHandler}>\r\n              Cancel\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              Delete\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Are you sure? It can't bu undone!</p>\r\n      </Modal>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <li className=\"profile-item\">\r\n        <Card className=\"profile-item__content\">\r\n          <div className=\"profile-item-a\" to={`/${props.id}/products`}>\r\n            <div className=\"profile-item-left\">\r\n              <div className=\"profile-item__image\">\r\n                <Avatar image={props.image} alt={props.name} />\r\n              </div>\r\n              <div className=\"profile-item__info\">\r\n                <h2>{props.name}</h2>\r\n                <h3>\r\n                  {props.productCount}{\" \"}\r\n                  {props.productCount === 1 ? \"Product\" : \"Products\"}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <Button to={`/products/new/${props.id}`} inverse>Add Product</Button>\r\n              <Button to={`/${props.id}/products`} inverse >See/Edit Products</Button>\r\n              <Button to={`/stores/update/${props.id}`} inverse>Edit Shop</Button>\r\n              <Button danger onClick={openDeleteModalHandler}>\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ProfileList.css\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nconst ProfileList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No stores found.</h2>\r\n          <Button to=\"/stores/new\">Create Store</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ul className=\"profile-list\">\r\n        {props.items.map((store) => (\r\n          <ProfileItem\r\n            key={store.id}\r\n            id={store.id}\r\n            image={store.image}\r\n            name={store.title}\r\n            productCount={store.products.length}\r\n            onDelete={props.onDeleteStore}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"center\">\r\n        <Button to=\"/stores/new\">Create Store</Button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport ProfileList from \"../components/ProfileList\";\n\nconst Profile = () => {\n  const auth = useContext(AuthContext);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/stores/user/${auth.userId}`);\n        setData(responseData.stores);\n      } catch (error) {\n      }\n    };\n    fetchData();\n  }, [sendRequest, auth.userId]);\n\n  const storeDeletedHandler = (deletedDataId) => {\n    setData((prevData) => prevData.filter((data) => data.id !== deletedDataId));\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && data && <ProfileList items={data} onDeleteStore={storeDeletedHandler} />}\n    </React.Fragment>\n  );\n};\n\nexport default Profile;","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ul className=\"nav-links\">\r\n        <li>\r\n          <NavLink to=\"/\" exact>\r\n            Stores\r\n          </NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && auth.userType && (\r\n          <li>\r\n            <NavLink to={`/profile/${auth.userId}`}>Profile</NavLink>\r\n          </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n          <li>\r\n            <NavLink to={`/favorites/${auth.userId}`}>Favorites</NavLink>\r\n          </li>\r\n        )}\r\n        {!auth.isLoggedIn && (\r\n          <li>\r\n            <NavLink to=\"/login\">Login</NavLink>\r\n          </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n          <li>\r\n            <button onClick={auth.logout}>Logout</button>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDom.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"navbar\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">ShopZone</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./ProductItem.css\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst ProductItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { favorites, id } = props;\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [favoriteStatus, setFavoriteStatus] = useState(false);\r\n  const openDeleteModalHandler = () => setShowConfirmModal(true);\r\n  const closeDeleteModalHandler = () => setShowConfirmModal(false);\r\n\r\n  useEffect(() => {\r\n    const checkfavorite = async () => {\r\n      setFavoriteStatus(favorites.includes(id));\r\n    };\r\n    checkfavorite();\r\n  }, [favorites, id]);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/product/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const addFavorite = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/favorites/${id}`,\r\n        \"POST\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setFavoriteStatus(true);\r\n      auth.setUserFavorites(responseData.favorites);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const removeFavorite = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/favorites/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setFavoriteStatus(false);\r\n      auth.setUserFavorites(responseData.favorites);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={closeDeleteModalHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"product-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button onClick={closeDeleteModalHandler}>Cancel</Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              Delete\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Are you sure? It can't bu undone!</p>\r\n      </Modal>\r\n      <li className=\"product-item\">\r\n        <Card className=\"product-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"product-item__image\">\r\n            <img src={props.image} alt={props.title} />\r\n          </div>\r\n          <div className=\"product-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.price}$</h3>\r\n            <p>\r\n              {props.description.slice(0, 20)}\r\n              {props.description.length > 20 ? \"...\" : \"\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"product-item__actions\">\r\n            {favoriteStatus && auth.userId && (\r\n              <Button danger onClick={removeFavorite}>Remove from Favorites</Button>\r\n            )}\r\n            {!favoriteStatus && auth.userId && (\r\n              <Button onClick={addFavorite}>Add to Favorites</Button>\r\n            )}\r\n            {auth.userId === props.ownerId && (\r\n              <Button to={`/products/${props.id}`}>Edit</Button>\r\n            )}\r\n            {auth.userId === props.ownerId && (\r\n              <Button danger onClick={openDeleteModalHandler}>\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport \"./ProductList.css\";\r\n\r\nconst ProductList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"product-list center\">\r\n        <Card>\r\n          <h2>No product found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"product-list\">\r\n      {props.items.map((product) => (\r\n        \r\n        <ProductItem\r\n          key={product.id}\r\n          id={product.id}\r\n          image={product.image}\r\n          title={product.title}\r\n          description={product.description}\r\n          price={product.price}\r\n          storeId={product.store}\r\n          ownerId={product.owner}\r\n          favorites={props.favorites}\r\n          onDelete={props.onDeleteProduct}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./Store.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nconst Store = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [data, setData] = useState();\r\n  const [favorites, setFavorites] = useState();\r\n  const storeId = useParams().storeId;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/products/store/${storeId}`\r\n        );\r\n\r\n        setData(responseData);\r\n      } catch (error) {}\r\n    };\r\n    fetchData();\r\n    const items = localStorage.getItem(\"favorites\");\r\n    if (!items) {\r\n      localStorage.setItem(\"favorites\", JSON.stringify({ favorites: [] }));\r\n    }\r\n    const favorites = JSON.parse(\r\n      localStorage.getItem(\"favorites\")\r\n    ).favorites.map((f) => f._id);\r\n    console.log(\"Store Favorites\", favorites);\r\n    setFavorites(favorites);\r\n  }, [sendRequest, storeId]);\r\n\r\n  const productDeletedHandler = (deletedDataId) => {\r\n    setData((prevData) => prevData.filter((data) => data.id !== deletedDataId));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      <div className=\"center\">\r\n        <Card className=\"header-card\">\r\n          {!isLoading && data && (\r\n            <div>\r\n              <h2>{data.storeTitle}</h2>\r\n              <p>{data.storeDescription}</p>\r\n              {auth.userId === data.storeOwner && (\r\n                <Button to={`/products/new/${storeId}`}>Add Product</Button>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Card>\r\n      </div>\r\n      {!isLoading && data && (\r\n        <ProductList\r\n          items={data.products}\r\n          favorites={favorites}\r\n          onDeleteProduct={productDeletedHandler}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n  let element;\r\n  if (props.element === \"input\") {\r\n    element = (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  } else if (props.element === \"select\") {\r\n    element = (\r\n      <select\r\n        id={props.id}\r\n        name={props.name}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      >\r\n        <option value=\"disabled\" disabled>Select User Type</option>\r\n\r\n        <option value=\"false\">Customer</option>\r\n        <option value=\"true\">Owner</option>\r\n      </select>\r\n    );\r\n  } else {\r\n    element = (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./ProductForm.css\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst UpdateProduct = () => {\r\n  const auth=useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedData, setLoadedData] = useState();\r\n  const productId = useParams().productId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      price: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/products/${productId}`\r\n        );\r\n        setLoadedData(responseData.product);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.product.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.product.description,\r\n              isValid: true,\r\n            },\r\n            price: {\r\n              value: responseData.product.price,\r\n              isValid: true,\r\n            },\r\n          },\r\n          false\r\n        );\r\n      } catch (error) {}\r\n    };\r\n    fetchData();\r\n  }, [sendRequest, productId, setFormData]);\r\n\r\n  const productUpdateSubmitHandler =async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/products/${productId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n          price: formState.inputs.price.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\":\"Bearer \"+auth.token\r\n        }\r\n      );\r\n      history.push(`/profile/${auth.userId}`);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedData && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2 className=\"center\">Cannot find product.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedData && <form className=\"product-form\" onSubmit={productUpdateSubmitHandler}>\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter valid title.\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedData.title}\r\n          initialValid={true}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter valid description.\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedData.description}\r\n          initialValid={true}\r\n        />\r\n        <Input\r\n          id=\"price\"\r\n          element=\"input\"\r\n          type=\"number\"\r\n          label=\"Price\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter valid title.\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedData.price}\r\n          initialValid={true}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          Update\r\n        </Button>\r\n      </form>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./StoreForm.css\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst UpdateStore = () => {\r\n  const auth=useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedData, setLoadedData] = useState();\r\n  const storeId = useParams().storeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/stores/${storeId}`\r\n        );\r\n        setLoadedData(responseData.store);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.store.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.store.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          false\r\n        );\r\n      } catch (error) {}\r\n    };\r\n    fetchData();\r\n  }, [sendRequest, storeId, setFormData]);\r\n\r\n  const storeUpdateSubmitHandler =async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/stores/${storeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\":\"Bearer \"+auth.token\r\n        }\r\n      );\r\n      history.push(`/profile/${auth.userId}/`);\r\n    } catch (error) {}\r\n\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedData && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2 className=\"center\">Cannot find store.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedData && <form className=\"store-form\" onSubmit={storeUpdateSubmitHandler}>\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter valid title.\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedData.title}\r\n          initialValid={true}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter valid description.\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedData.description}\r\n          initialValid={true}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          Update\r\n        </Button>\r\n      </form>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateStore;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const loginSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const responseData= await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: formState.inputs.email.value,\r\n          password: formState.inputs.password.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(responseData.userId, responseData.token, responseData.userType);\r\n    } catch (error) {}\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        <h2>Login</h2>\r\n        <hr />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <form onSubmit={loginSubmitHandler}>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid Email adress.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Login\r\n          </Button>\r\n        </form>\r\n        <hr />\r\n        <h3>If you are not signup yet</h3>\r\n        <Button to=\"/signup\">Let's Signup</Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Signup.css\";\r\n\r\nconst Signup = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      name: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      type: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const signupSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          name: formState.inputs.name.value,\r\n          email: formState.inputs.email.value,\r\n          password: formState.inputs.password.value,\r\n          type: formState.inputs.type.value === \"true\" ? true : false,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(\r\n        responseData.userId,\r\n        responseData.token,\r\n        responseData.userType\r\n      );\r\n    } catch (error) {}\r\n    console.log(formState.inputs);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        <h2>Signup</h2>\r\n        <hr />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <form onSubmit={signupSubmitHandler}>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            label=\"Your Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid name.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid Email adress.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"select\"\r\n            id=\"type\"\r\n            name=\"type\"\r\n            label=\"User Type\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid user type.\"\r\n            onInput={inputHandler}\r\n            initialValue=\"disabled\"\r\n            initialValid={false}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Signup\r\n          </Button>\r\n        </form>\r\n        <hr />\r\n        <h3>If you are signup already</h3>\r\n        <Button to=\"/login\">Let's Login</Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useContext } from \"react\";\nimport {useParams, useHistory } from \"react-router-dom\";\n\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./ProductForm.css\";\n\nconst NewProduct = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const storeId = useParams().storeId;\n\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      price: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    console.log(formState)\n    console.log(auth.userId);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL+\"/products\",\n        \"POST\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n          price: formState.inputs.price.value,\n          storeId:storeId\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\":\"Bearer \"+auth.token\n        }\n      );\n      history.push(`/${storeId}/products`);\n    } catch (error) {\n      console.log(error)\n    }\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"product-form\" onSubmit={submitHandler}>\n        {isLoading && <LoadingSpinner asOverlay/>}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"price\"\n          element=\"input\"\n          type=\"number\"\n          label=\"Price\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          Add Product\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewProduct;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./StoreForm.css\";\n\nconst NewStore = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/stores`,\n        \"POST\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\":\"Bearer \"+auth.token\n        }\n      );\n      history.push(\"/\");\n    } catch (error) {}\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"store-form\" onSubmit={submitHandler}>\n        {isLoading && <LoadingSpinner asOverlay/>}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          Add Store\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewStore;\n","import React, { useContext } from \"react\";\r\n\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./FavoriteItem.css\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst ProductItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const deleteHandler = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/favorites/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    //   history.push(`/favorites/${auth.userId}`);\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <li className=\"favorite-item\">\r\n        <Card className=\"favorite-item__content\">\r\n          <div className=\"favorite-item-a\">\r\n            <div className=\"favorite-item-left\">\r\n              <div className=\"favorite-item__image\">\r\n                <Avatar image={props.image} alt={props.title} />\r\n              </div>\r\n              <div className=\"favorite-item__info\">\r\n                <h2>{props.title}</h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <Button danger onClick={deleteHandler}>\r\n                Remove\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport FavoritesItem from \"./FavoritesItem\";\r\nimport \"./FavoritesList.css\";\r\n\r\nconst FavoriteList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"product-list center\">\r\n        <Card>\r\n          <h2>No product found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"favorite-list\">\r\n      {props.items.map((product) => (\r\n        <FavoritesItem\r\n          key={product._id}\r\n          id={product._id}\r\n          image={product.image}\r\n          title={product.title}\r\n          price={product.price}\r\n          storeId={product.store}\r\n          ownerId={product.owner}\r\n          onDelete={props.onDeleteFavoritesList}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FavoriteList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport FavoriteList from \"../components/FavoritesList\";\r\nconst Favorites = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    const getData=async()=>{\r\n      try {\r\n        const responseData =await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/favorites/${auth.userId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setData(responseData.favorites);\r\n        auth.setUserFavorites(responseData.favorites);\r\n      } catch (error) {}\r\n    }\r\n    getData();\r\n  }, [sendRequest, auth]);\r\n\r\n  const favoritesDeletedHandler = (deletedDataId) => {\r\n    const newData=data.filter((d) => d._id !== deletedDataId);\r\n    console.log(newData)\r\n    setData(newData);\r\n    console.log(\"Data:\",data)\r\n    auth.setUserFavorites(newData);\r\n\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && data && (\r\n        <FavoriteList items={data} onDeleteFavoritesList={favoritesDeletedHandler} />\r\n\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Stores from \"./store/pages/Stores\";\nimport Profile from \"./store/pages/Profile\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport Store from \"./products/pages/Store\";\nimport UpdateProduct from \"./products/pages/UpdateProduct\";\nimport UpdateStore from \"./store/pages/UpdateStore\";\n\nimport Login from \"./user/pages/Login\";\nimport Signup from \"./user/pages/Signup\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport NewProduct from \"./products/pages/NewProduct\";\nimport NewStore from \"./store/pages/NewStore\";\nimport Favorites from \"./products/pages/Favorites\";\n\nconst App = () => {\n  const {\n    token,\n    login,\n    logout,\n    userId,\n    userType,\n    setUserFavorites,\n    favorites,\n  } = useAuth();\n\n  let routes;\n  if (token && !userType) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Stores />\n        </Route>\n        <Route path=\"/:storeId/products\" exact>\n          <Store />\n        </Route>\n        <Route path=\"/favorites/:userId\" exact>\n          <Favorites />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else if (token && userType) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Stores />\n        </Route>\n        <Route path=\"/profile/:userId\" exact>\n          <Profile />\n        </Route>\n        <Route path=\"/:storeId/products\" exact>\n          <Store />\n        </Route>\n\n        <Route path=\"/favorites/:userId\" exact>\n          <Favorites />\n        </Route>\n        <Route path=\"/products/new/:storeId\" exact>\n          <NewProduct />\n        </Route>\n        <Route path=\"/stores/new\" exact>\n          <NewStore />\n        </Route>\n        <Route path=\"/products/:productId\" exact>\n          <UpdateProduct />\n        </Route>\n        <Route path=\"/stores/update/:storeId\" exact>\n          <UpdateStore />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Stores />\n        </Route>\n        <Route path=\"/:storeId/products\" exact>\n          <Store />\n        </Route>\n        <Route path=\"/login\" exact>\n          <Login />\n        </Route>\n        <Route path=\"/signup\" exact>\n          <Signup />\n        </Route>\n        <Redirect to=\"/login\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        userType: userType,\n        login: login,\n        logout: logout,\n        setUserFavorites: setUserFavorites,\n        favorites: favorites,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}